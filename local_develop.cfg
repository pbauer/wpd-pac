# This is a locally used development-buildout (no zeo with some useful
# tools) common to all sites.

[buildout]
extends =
    https://raw.github.com/starzel/buildout/4.3/linkto/base.cfg

# If you want you can have you eggs picked
allow-picked-versions = true

sources-dir = src

# Locally you might want some nice development extions:
eggs =
#    plone.app.debugtoolbar
#    Products.DocFinderTab
#    Products.PrintingMailHost
#    plone.reload
#    collective.backtowork
#    raven
# Allow debugging restricted code
#    Products.Ienablesettrace
# Post-mortem debugging
#    Products.PDBDebugMode
# Debugging on the fly
#    iw.debug
# Information where a deadlock occurs
#    z3c.deadlockdebugger

zcml =
#    iw.debug

parts +=
#    test
#    coverage-test
#    coverage-report
#    zopeskel
    instance
    i18ndude
    omelette
    zopepy
    checkversions
    codeintel

# Adjust these to the directory-setup on the server. The default matches the setup on gocepts servers.
# Relative paths:
#backupdir = ${buildout:directory}/backup
#vardir = ${buildout:directory}/var
backupdir = /home/starzel/backup/${buildout:site}
vardir = /home/starzel/var/${buildout:site}
logdir = ${buildout:vardir}/log

[ports]
# Adjust the ports if necessary (e.g. if you run multiple sites without modifying /etc/hosts)
varnish = 8080
haproxy = 8081
zeoclient1 = 8082
zeoclient2 = 8083
zeoclient_debug = 8084
zeoserver = 8100
# Edit /etc/hosts so you can use "localip = ${buildout:site}" to run all sites on the same port.
instance = 8080

[bindips]
instance = 0.0.0.0
zeoserver = 127.0.0.1
varnish = 127.0.0.1
haproxy = 127.0.0.1
zeoclient1 = 127.0.0.1
zeoclient2 = 127.0.0.1
zeoclient_debug = 127.0.0.1

[instance]
recipe = plone.recipe.zope2instance
user = ${buildout:login}:${buildout:password}
http-address = ${bindips:instance}:${ports:instance}
debug-mode = on
verbose-security = on
deprecation-warnings = on
eggs = ${buildout:eggs}
zcml = ${buildout:zcml}
environment-vars =
    zope_i18n_compile_mo_files = true

[test]
recipe = zc.recipe.testrunner
eggs =
    ${buildout:eggs}
defaults = ['--exit-with-status', '--auto-color', '--auto-progress']

[coverage-test]
recipe = zc.recipe.testrunner
eggs = ${test:eggs}
defaults = ['--coverage', '../../coverage', '-v', '--auto-progress']

[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coverage=coverage-report
arguments = ('coverage', 'report')

[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude

[zopeskel]
unzip = true
recipe = zc.recipe.egg
eggs =
    ZopeSkel
    ${instance:eggs}

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}
packages = ${instance:location}/lib/python ./
ignore-develop = False

[zopepy]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = zopepy

[checkversions]
recipe=zc.recipe.egg
eggs=z3c.checkversions [buildout]

[codeintel]
recipe = corneti.recipes.codeintel
eggs = ${instance:eggs}
extra-paths = ${omelette:location}
